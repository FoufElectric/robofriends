{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","className","src","id","alt","CardList","robots","map","user","i","SearchBox","onChange","searchChange","type","placeholder","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","typedChars","target","value","searchField","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCWCQ,EAhBF,SAACC,GACZ,IAAOC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACb,OACE,sBAAKC,UAAU,kDAAf,UACE,qBAAKC,IAAG,+BAA0BJ,EAAMK,GAAhC,YAA+CC,IAAI,UAC3D,gCACE,6BAAKL,IACL,4BAAIC,WCoBGK,EA1BE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OASjB,OACE,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEEN,GAAIK,EAAKL,GACTJ,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHPS,SCNAC,EAVG,SAACZ,GACjB,OACE,qBAAKG,UAAU,MAAf,SACE,uBAAOU,SAAUb,EAAMc,aAAcX,UAAU,mCAC/CY,KAAK,SACLC,YAAY,wBCIHC,G,MATA,SAACjB,GACd,OACE,qBAAKkB,MAAO,CAAEC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACGrB,EAAMsB,aCmBEC,E,kDArBX,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACE,OAAGG,KAAKJ,MAAMC,SACL,2DAGAG,KAAK5B,MAAMsB,a,GAjBIQ,aCiEfC,E,kDA1Db,aAAe,IAAD,8BACZ,gBAmBJC,eAAiB,SAACC,GACd,IAAIC,EAAaD,EAAME,OAAOC,MAC9B,EAAKP,SAAS,CAACQ,YAAYH,KApB3B,EAAKV,MAAQ,CACXhB,OAAQ,GACR6B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CAA8C7C,MAAK,SAAA8C,GACvD,OAAOA,EAASC,UAEjB/C,MAAK,SAAAgD,GACJ,EAAKZ,SAAS,CAACrB,OAAQiC,S,oBAgB3B,WAAU,IAAD,OACGC,EAAiBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAC,GAChD,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKtB,MAAMa,YAAYQ,kBAIlE,OAAiC,IAA7BjB,KAAKJ,MAAMhB,OAAOuC,OACb,4CAGL,sBAAK5C,UAAU,KAAf,UAEE,6CACA,cAAC,EAAD,CAAWW,aAAcc,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,e,GA/ChBZ,aCElBkB,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.155e550c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n  const {name, email} = props;\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n      <img src={`https://robohash.org/${props.id}?200x200`}  alt='photo' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n// if(true) {\r\n//   throw new Error(\"NOOOOO!\");\r\n// }\r\n\r\n// This was originally a lot more clear, but I followed the\r\n// professor's way of cleaning up the code, now it looks\r\n// clean, but hell to understand\r\n  return (\r\n    <div>\r\n    {\r\n    robots.map((user, i) => {\r\n      return (\r\n        <Card\r\n          key={i}\r\n          id={user.id}\r\n          name={user.name}\r\n          email={user.email} />\r\n        );\r\n      })\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input onChange={props.searchChange} className='pa3 ba b--green bg-lightest-blue'\r\n      type='search'\r\n      placeholder='Search robots...'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY:'scroll', border: '1px solid black', height:'500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\n  class ErrorBoundary extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        hasError: false\r\n      }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n      this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n      if(this.state.hasError) {\r\n        return <h1>Oooops, thats not good :(</h1>\r\n      }\r\n\r\n        return this.props.children\r\n    }\r\n  }\r\n\r\n\r\nexport default ErrorBoundary;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n      return response.json();\r\n    })\r\n    .then(users => {\r\n      this.setState({robots: users});\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\nonSearchChange = (event) =>  {\r\n    let typedChars = event.target.value;\r\n    this.setState({searchField:typedChars});\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n\r\n      })\r\n\r\n      if (this.state.robots.length === 0) {\r\n        return <h1>Loading...</h1>\r\n      } else {\r\n        return (\r\n          <div className='tc'>\r\n\r\n            <h1>RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n              <ErrorBoundary>\r\n                <CardList robots={filteredRobots} />\r\n              </ErrorBoundary>\r\n            </Scroll>\r\n\r\n          </div>\r\n        );\r\n      }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}